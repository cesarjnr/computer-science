Introduction

CMake is a tool to manage the building of source code. Basically, CMake generates makefiles automatically, without having to write one ourselves.

Installation

To install cmake:

  sudo apt-get install cmake

CMakeLists.txt

All the steps needed to CMake generate the build will be in a file called CMakeLists.txt. Lets see a basic example:

  cmake_minimum_required(VERSION 3.16)
  project(root_directory)
  add_excecutable(main main.cpp)

The previous three lines are required in any CMakeLists.txt:

---> cmake_minimum_required(VERSION 3.16) - pass the CMake version installed on your computer
---> project(root_directory) - pass the root directory where the CMakeLists.txt is located
---> add_excecutable(main main.cpp) - pass the name that will be used in the binary generated file and the name of the source file

Build and Run

It's a good practice to create a directory for the files generated by CMake. We usually call it build:

  mkdir build

Next, navigate to the build directory and run CMake to configure the project and generate a native build system:

  cd build
  cmake ..

We need to pass to cmake command the folder where the file CMakeLists.txt is located. In this case, since we navigated to the build folder, we needed to back one level.
Then we call the build system to actually compile the project:

  cmake --buid .

In this case, since we are in the build folder already we just need to pass the current folder to the command.
If you know the native build system of your OS, you can also use it. For example, if you are using Linux you can se use the make tool which is the build system for Linux OS:

  make

The make command needs to be executed on the folder where the Makefile file is located
